#!/bin/bash
#       (_)_ __   ___ ___  _ __ ___   ___
# 	| | '_ \ / __/ _ \| '_ ` _ \ / _ \
# 	| | | | | (_| (_) | | | | | |  __/
# 	|_|_| |_|\___\___/|_| |_| |_|\___|
# income - A Bash script for quick personal finance calculations: estimate income (hourly, weekly, monthly, yearly), rent affordability, and income bracketsâ€”all from the command line 
# Author: galaxy-cli
# Project: https://github.com/galaxy-cli/income

#--- Utility Functions ---#

print_income_breakdown() {
    local hour week month year
    hour=$1; week=$2; month=$3; year=$4
    printf "\nIncome Breakdown:"
    printf "\n  Per hour:  \$%'d" "$hour"
    printf "\n  Per week:  \$%'d" "$week"
    printf "\n  Per month: \$%'d" "$month"
    printf "\n  Per year:  \$%'d\n\n" "$year"
}

get_positive_number() {
    local prompt var clean
    prompt=$1
    while true; do
        read -p "$prompt" var
        # Remove commas from input
        clean="${var//,/}"
        if [[ "$clean" =~ ^[0-9]+$ ]] && [ "$clean" -gt 0 ]; then
            echo "$clean"
            return
        else
            echo "Please enter a positive number (commas are allowed, e.g., 1,000)."
        fi
    done
}

get_non_negative_number() {
    local prompt var clean
    prompt=$1
    while true; do
        read -p "$prompt" var
        # Remove commas from input
        clean="${var//,/}"
        if [[ "$clean" =~ ^[0-9]+$ ]]; then
            echo "$clean"
            return
        else
            echo "Please enter a non-negative integer (0 or greater, commas allowed)."
        fi
    done
}

#--- Main Calculators ---#

calculate_income() {
    echo "=== Income Calculator ==="
    read -p "Calculate yearly income? [Y/N] " yearly
    if [[ $yearly =~ [yY] ]]; then
        year=$(get_positive_number "Annual income ($): ")
        hour=$((year/12/5/8))
        week=$((year/12/4))
        month=$((year/12))
        print_income_breakdown "$hour" "$week" "$month" "$year"
    fi

    read -p "Calculate monthly income? [Y/N] " monthly
    if [[ $monthly =~ [yY] ]]; then
        hour=$(get_positive_number "Hourly wage ($): ")
        workweek=$(get_positive_number "Hours per week: ")
        week=$((hour*workweek))
        month=$((week*4))
        year=$((month*12))
        print_income_breakdown "$hour" "$week" "$month" "$year"
    fi
}

calculate_rent() {
    echo "=== Rent Calculator ==="
    rent=$(get_positive_number "Rent per month ($): ")
    income=$(get_positive_number "Income per month ($): ")
    roommates=$(get_non_negative_number "Number of roommates: ")
    total_people=$((roommates + 1))
    remains=$((income - (rent/total_people)))
    yearly=$((remains*12))
    percent=$((((rent/total_people)*100)/income))
    printf "\nAfter rent: \$%'d/month, \$%'d/year" "$remains" "$yearly"
    printf "\nRent is %d%% of income\n\n" "$percent"
}

calculate_income_bracket() {
    echo "=== Income Bracket Calculator ==="
    mid=$(get_positive_number "Middle class income bracket ($): ")
    work=$((mid/2))
    lowmid=$(echo "scale=0; $mid/1.5" | bc)
    uppmid=$(echo "$mid*1.5" | bc)
    uppmid_int=$(printf "%.0f" "$uppmid")
    upp=$((mid*2))
    wel=$((mid*3))
    printf "\n\$%'d or less: Working class" "$work"
    printf "\n\$%'d: Lower middle class" "$lowmid"
    printf "\n\$%'d: Middle class" "$mid"
    printf "\n\$%'d: Upper middle class" "$uppmid_int"
    printf "\n\$%'d: Upper class" "$upp"
    printf "\n\$%'d or more: Wealthy\n\n" "$wel"
}

#--- Main Script ---#

read -p "Calculate income? [Y/N] " ans
[[ $ans =~ [yY] ]] && calculate_income

read -p "Calculate rent? [Y/N] " ans
[[ $ans =~ [yY] ]] && calculate_rent

read -p "Calculate income brackets? [Y/N] " ans
[[ $ans =~ [yY] ]] && calculate_income_bracket
